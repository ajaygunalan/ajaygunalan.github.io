---
title: A collection of interesting blogs
---

1. [Video tutorials of CMake](https://www.youtube.com/playlist?list=PLK6MXr8gasrGmIiSuVQXpfFuE1uPT615s)
2. [Dynamic Motion Primitives, Null Space Control, etc..](https://studywolf.wordpress.com/site-index/)
3. [Gaussian Processes](https://distill.pub/2019/visual-exploration-gaussian-processes/)
4. [Snake, CPG, RL](https://www.sartoretti.science/research.html)
5. [Mecca of Maniupulation](http://arm.eecs.umich.edu/#projects)
6. [ROS debug](https://dav.ee/blog/notes/archives/898)
7. [Awesome Robotics Libraries](http://jslee02.github.io/awesome-robotics-libraries/)
8. [Design Patterns for Humans](https://roadmap.sh/guides/design-patterns-for-humans#creational-design-patterns) 
    * Simple example code [(a)](https://github.com/pezy/DesignPatterns) & [(b)](https://github.com/JakubVojvoda/design-patterns-cpp)
9. [Writing a Linux Kernel Module](http://derekmolloy.ie/writing-a-linux-kernel-module-part-1-introduction/)
10. [What are Control Groups](https://www.kernel.org/doc/Documentation/cgroup-v1/cgroups.txt)
11. [The Linux Scheduler](https://www.linuxjournal.com/article/3910)
12. [Auto Type Deduction in Range-Based For Loops](https://blog.petrzemek.net/2016/08/17/auto-type-deduction-in-range-based-for-loops/)
13. [Nice explanation about ML](https://www.sagargv.com/blog/)
14. [Unreal](https://www.dariomazzanti.com/)
15. [Multiprocessing](https://www.shreya-shankar.com/multiprocessing-intro/)
16. [LOW-LATENCY KERNEL? WTF?!?!](https://sevencapitalsins.wordpress.com/2007/08/10/low-latency-kernel-wtf/)
17. [Let me detach those threads for you](https://medium.com/@vgasparyan1995/let-me-detach-those-threads-for-you-2de014b26394)
18. [How to terminate a C++ std::thread?](https://www.bo-yang.net/2017/11/19/cpp-kill-detached-thread)
19. [git guide](https://sethrobertson.github.io/GitFixUm/fixup.html)
20. [DSP Guru](https://dspguru.com/)
21. [Pulse-oximeter on a breadboard](https://ashishsahani.com/pulse-oximeter-on-a-breadboard/)
22. [ECG using two chips](https://ashishsahani.com/ecg-using-two-chips/)
23. [How I learned Yocto Project, Qt and why would you do the same](https://medium.com/geekculture/how-i-learned-yocto-project-and-qt-and-why-you-would-do-the-same-b030528e11f6)
24. [ROS 2 â€“ a viable real-time solution?](https://pouya-moh.com/ros-2-a-viable-real-time-solution/)
25. [Unix Philosophy and the Real World: Control Software for Humanoid Robots](https://www.frontiersin.org/articles/10.3389/frobt.2016.00006/full)
26. [RobotCore: An Open Architecture for Hardware Acceleration in ROS 2](https://arxiv.org/abs/2205.03929)
27. [Developing Production-Grade Applications with ROS 2]()
28. [Development of a real-time application based on Xenomai](https://webthesis.biblio.polito.it/11009/1/tesi.pdf)
29. [](http://essay.utwente.nl/92427/1/Vinkenvleugel_BA_EEMCS.pdf)
30. [surgicalroboticstechnolog](https://www.surgicalroboticstechnology.com/suppliers/)
31. [Build your own X](https://github.com/codecrafters-io/build-your-own-x)
32. [Robotics Today webinar](https://roboticstoday.github.io/)
33. [MIT Robotics Webinar](https://robotics.mit.edu/robotics-seminar)
34. [CMU Robotics Webinar](https://www.ri.cmu.edu/event/ri-seminar-matthew-johnson-roberson-cmu-2022-02-04/)
35. [Docker-BBQ](https://markhedleyjones.com/projects/docker-bbq)
36. [Mark Hedley Jones](https://markhedleyjones.com/)
37. [The Art of Command Line](https://github.com/jlevy/the-art-of-command-line)
38. [List of Free Learning Resources In Many Languages](https://github.com/EbookFoundation/free-programming-books)